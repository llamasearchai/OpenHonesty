name: Backend CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: backend/.venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        cd backend
        poetry install --no-interaction --no-ansi
    
    - name: Lint with flake8
      run: |
        cd backend
        poetry run flake8 honesty tests --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 honesty tests --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Format check with black
      run: |
        cd backend
        poetry run black honesty tests --check --diff
    
    - name: Import sorting check with isort
      run: |
        cd backend
        poetry run isort honesty tests --check-only --diff
    
    - name: Type check with mypy
      run: |
        cd backend
        poetry run mypy honesty --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        cd backend
        poetry run pytest tests/ --cov=honesty --cov-report=xml --cov-report=term-missing -v
    
    - name: Test CLI functionality
      run: |
        cd backend
        poetry run python -c "from honesty.cli.main import create_parser; parser = create_parser(); print('CLI parser created successfully')"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: unittests
        name: codecov-umbrella